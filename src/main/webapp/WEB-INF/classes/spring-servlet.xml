<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">  
      
    <!-- 启用spring mvc 注解 -->
    <!-- <context:annotation-config />  -->
    <!-- 静态资源-->
    <mvc:default-servlet-handler/> 
    <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 -->
	<!-- <bean id="dateConvert" class="com.framework.common.mapper.DateConvert"/>  
   	<bean id="customObjectMapper" class="com.framework.common.mapper.CustomObjectMapper" />
	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
                <ref bean="dateConvert"/>
            </set>
		</property>
	</bean>
	<mvc:annotation-driven conversion-service="conversion-service">
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
				<property name="objectMapper" ref="customObjectMapper"></property>
			</bean>
			
		</mvc:message-converters>
	</mvc:annotation-driven> -->
	
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<bean id="dateConvert" class="com.framework.common.mapper.DateConvert"/>
	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
                <ref bean="dateConvert"/>
            </set>
		</property>
	</bean>
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" conversion-service="conversion-service">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                	<list><value>application/json;charset=UTF-8</value></list>
                </property>
                <property name="prettyPrint" value="false"/>
                <property name="objectMapper">  
                    <bean class="com.framework.common.mapper.JsonMapper"></bean>  
                </property> 
            </bean>
            
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
    <!-- 自动扫描的包名 ，使Spring支持自动检测组件，如注解的Controller-->  
    <context:component-scan base-package="com.framework.controller"  />
    <context:component-scan base-package="com.ssa.controller"  />
	<context:component-scan base-package="com.framework.shiro.controller"  />   
	<context:component-scan base-package="com.act.controller"  /> 
	<context:component-scan base-package="com.act.rest.*.*.**"  /> 
    
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
	
    <!-- 视图解析器:定义跳转的文件的前后缀 -->    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">    
        <property name="prefix" value="/WEB-INF/jsp/" />    
        <property name="suffix" value=".jsp" />  <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->  
    </bean>    
  
    <!--配置拦截器, 多个拦截器,顺序执行 -->   
    <mvc:interceptors>    
        <mvc:interceptor>    
            <!-- 匹配的是url路径  -->  
            <mvc:mapping path="/" />  
            <mvc:mapping path="/user/**" />  
            <mvc:mapping path="/test/**" />  
              
            <bean class="com.framework.interceptor.CommonInterceptor"></bean>    
        </mvc:interceptor>  
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
    </mvc:interceptors>  
    
    <!-- 邮箱配置 -->
  	<!-- <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>/WEB-INF/pages/emailTemplate</value>
		</property>
  	</bean> -->
    <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为1MB 单位为字节-->
		<property name="maxUploadSize">
			<value>10485760</value>
		</property>
	</bean>
</beans>